# Example .env file showing how to handle multiple API keys properly

# GeniiData API Configuration
# Add multiple API keys separated by commas for load balancing
# Each key has a 2000 request/day limit, so multiple keys = higher throughput

# Example 1: Single valid API key (current setup)
GENIIDATA_API_KEYS=142cf1b0-1ca7-11ee-bb5e-9d74c2e854ac

# Example 2: Multiple valid API keys (uncomment and replace with real keys)
# GENIIDATA_API_KEYS=142cf1b0-1ca7-11ee-bb5e-9d74c2e854ac,real-second-key-here,real-third-key-here

# Example 3: Mixed valid and invalid keys (system will auto-filter)
# GENIIDATA_API_KEYS=142cf1b0-1ca7-11ee-bb5e-9d74c2e854ac,your-second-api-key-here,real-third-key-here
# Result: Only the 1st and 3rd keys would be used (2nd is filtered out as placeholder)

# Example 4: What NOT to do (all will be filtered out except the first)
# GENIIDATA_API_KEYS=142cf1b0-1ca7-11ee-bb5e-9d74c2e854ac,add-your-key-here,your-key-here
# Result: Only 1 valid key used

# Optional: Custom user agents for each key (helps with IP rotation)
USER_AGENTS=Bitmap-Tracker-1/1.0,Bitmap-Tracker-2/1.0,Bitmap-Tracker-3/1.0

# Rate limiting settings (adjust based on number of API keys)
MAX_REQUESTS_PER_DAY_PER_KEY=2000
MAX_REQUESTS_PER_SECOND=5

# Network settings for IP rotation
USE_PROXY_ROTATION=false
PROXY_LIST=

# Rotation settings
ROTATE_USER_AGENTS=true
ROTATE_REQUEST_HEADERS=true

# Historical backfill settings
HISTORICAL_START_BLOCK=840000

# File locations
CSV_FILE=bitmap_data.csv
PROGRESS_FILE=backfill_progress.json

# Advanced settings
REQUEST_INTERVAL=220
RETRY_DELAY=5000
MAX_RETRIES=2
DAILY_LIMIT_BUFFER=50

# Git Auto-Commit Settings
AUTO_COMMIT_CSV=true
GIT_COMMIT_MESSAGE=Update Bitcoin bitmap data - Block {blockNumber}
GIT_PUSH_TO_REMOTE=true
GIT_BRANCH=main
